{
  "id": "CVE-2022-50081",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-06-18T11:15:37.103",
  "lastModified": "2025-06-18T11:15:37.103",
  "vulnStatus": "Received",
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: Unconditionally get a ref to /dev/kvm module when creating a VM\n\nUnconditionally get a reference to the /dev/kvm module when creating a VM\ninstead of using try_get_module(), which will fail if the module is in\nthe process of being forcefully unloaded.  The error handling when\ntry_get_module() fails doesn't properly unwind all that has been done,\ne.g. doesn't call kvm_arch_pre_destroy_vm() and doesn't remove the VM\nfrom the global list.  Not removing VMs from the global list tends to be\nfatal, e.g. leads to use-after-free explosions.\n\nThe obvious alternative would be to add proper unwinding, but the\njustification for using try_get_module(), \"rmmod --wait\", is completely\nbogus as support for \"rmmod --wait\", i.e. delete_module() without\nO_NONBLOCK, was removed by commit 3f2b9c9cdf38 (\"module: remove rmmod\n--wait option.\") nearly a decade ago.\n\nIt's still possible for try_get_module() to fail due to the module dying\n(more like being killed), as the module will be tagged MODULE_STATE_GOING\nby \"rmmod --force\", i.e. delete_module(..., O_TRUNC), but playing nice\nwith forced unloading is an exercise in futility and gives a falsea sense\nof security.  Using try_get_module() only prevents acquiring _new_\nreferences, it doesn't magically put the references held by other VMs,\nand forced unloading doesn't wait, i.e. \"rmmod --force\" on KVM is all but\nguaranteed to cause spectacular fireworks; the window where KVM will fail\ntry_get_module() is tiny compared to the window where KVM is building and\nrunning the VM with an elevated module refcount.\n\nAddressing KVM's inability to play nice with \"rmmod --force\" is firmly\nout-of-scope.  Forcefully unloading any module taints kernel (for obvious\nreasons)  _and_ requires the kernel to be built with\nCONFIG_MODULE_FORCE_UNLOAD=y, which is off by default and comes with the\namusing disclaimer that it's \"mainly for kernel developers and desperate\nusers\".  In other words, KVM is free to scoff at bug reports due to using\n\"rmmod --force\" while VMs may be running."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/177bf354200962c6f0de6dd37c86a9bf3b54003a",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/405294f29faee5de8c10cb9d4a90e229c2835279",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/865e08b77c244eed0b80439320e7e8440f61ebce",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}