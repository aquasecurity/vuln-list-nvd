{
  "id": "CVE-2025-38611",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-08-19T17:15:39.633",
  "lastModified": "2025-08-28T15:15:55.357",
  "vulnStatus": "Awaiting Analysis",
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nvmci: Prevent the dispatching of uninitialized payloads\n\nThe reproducer executes the host's unlocked_ioctl call in two different\ntasks. When init_context fails, the struct vmci_event_ctx is not fully\ninitialized when executing vmci_datagram_dispatch() to send events to all\nvm contexts. This affects the datagram taken from the datagram queue of\nits context by another task, because the datagram payload is not initialized\naccording to the size payload_size, which causes the kernel data to leak\nto the user space.\n\nBefore dispatching the datagram, and before setting the payload content,\nexplicitly set the payload content to 0 to avoid data leakage caused by\nincomplete payload initialization."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: vmci: Impedir el envío de payloads no inicializadas El reproductor ejecuta la llamada unlocked_ioctl del host en dos tareas diferentes. Cuando init_context falla, la estructura vmci_event_ctx no se inicializa por completo al ejecutar vmci_datagram_dispatch() para enviar eventos a todos los contextos de la máquina virtual. Esto afecta al datagrama tomado de la cola de datagramas de su contexto por otra tarea, porque el payload del datagrama no se inicializa según el tamaño payload_size, lo que provoca que los datos del kernel se filtren al espacio de usuario. Antes de enviar el datagrama y antes de configurar el contenido del payload, configure explícitamente el contenido de la carga útil a 0 para evitar la fuga de datos causada por la inicialización incompleta del payload."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/2c86366ce37f398e20fa09e7e9dc8788fbf6cf0c",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/6696a46f4ebdc7314ff23a2fb0e93a95da2c45ee",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/7624fe66a0832eb6fe4e465fcdd4f9104fb9b339",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/87f8f8654e55cf9327cc63746595085a041699dc",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/94112b0d443e0b6b5bb17854f97c1498064cc9ed",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/a85dc83857497fa1f68a9b23e7213949d4cb51ea",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/b097d921efb5bb150066365287ff046b8c8b29f5",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/bfb4cf9fb97e4063f0aa62e9e398025fb6625031",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/bfd6b211fe8aae79acbedd19e8d5bea5d062a41b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}