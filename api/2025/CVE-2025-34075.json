{
  "id": "CVE-2025-34075",
  "sourceIdentifier": "disclosure@vulncheck.com",
  "published": "2025-07-02T20:15:29.553",
  "lastModified": "2025-07-03T15:13:53.147",
  "vulnStatus": "Awaiting Analysis",
  "descriptions": [
    {
      "lang": "en",
      "value": "An authenticated virtual machine escape vulnerability exists in HashiCorp Vagrant when using the default synced folder configuration. By design, Vagrant automatically mounts the host system’s project directory into the guest VM under /vagrant (or C:\\vagrant on Windows). This includes the Vagrantfile configuration file, which is a Ruby script evaluated by the host every time a vagrant command is executed in the project directory. If a low-privileged attacker obtains shell access to the guest VM, they can append arbitrary Ruby code to the mounted Vagrantfile. When a user on the host later runs any vagrant command, the injected code is executed on the host with that user’s privileges.\n\n While this shared-folder behavior is well-documented by Vagrant, the security implications of Vagrantfile execution from guest-writable storage are not explicitly addressed. This effectively enables guest-to-host code execution in multi-tenant or adversarial VM scenarios."
    },
    {
      "lang": "es",
      "value": "Existe una vulnerabilidad de escape de máquina virtual autenticada en HashiCorp Vagrant al usar la configuración predeterminada de carpetas sincronizadas. Por diseño, Vagrant monta automáticamente el directorio del proyecto del sistema host en la máquina virtual invitada, bajo /vagrant (o C:\\vagrant en Windows). Esto incluye el archivo de configuración Vagrantfile, un script de Ruby que el host evalúa cada vez que se ejecuta un comando de Vagrant en el directorio del proyecto. Si un atacante con pocos privilegios obtiene acceso de shell a la máquina virtual invitada, puede añadir código Ruby arbitrario al Vagrantfile montado. Cuando un usuario del host ejecuta posteriormente cualquier comando de Vagrant, el código inyectado se ejecuta en el host con los privilegios de ese usuario. Si bien Vagrant documenta exhaustivamente este comportamiento de carpeta compartida, no se abordan explícitamente las implicaciones de seguridad de la ejecución de Vagrantfile desde el almacenamiento con permisos de escritura del huésped. Esto permite la ejecución de código de huésped a host en escenarios de máquinas virtuales multiinquilino o adversarias."
    }
  ],
  "metrics": {
    "cvssMetricV40": [
      {
        "source": "disclosure@vulncheck.com",
        "type": "Secondary",
        "cvssData": {
          "version": "4.0",
          "vectorString": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:A/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X",
          "baseScore": 5.4,
          "baseSeverity": "MEDIUM",
          "attackVector": "LOCAL",
          "attackComplexity": "LOW",
          "attackRequirements": "PRESENT",
          "privilegesRequired": "LOW",
          "userInteraction": "ACTIVE",
          "exploitMaturity": "NOT_DEFINED",
          "modifiedAttackVector": "NOT_DEFINED",
          "modifiedAttackComplexity": "NOT_DEFINED",
          "modifiedAttackRequirements": "NOT_DEFINED",
          "modifiedPrivilegesRequired": "NOT_DEFINED",
          "modifiedUserInteraction": "NOT_DEFINED",
          "safety": "NOT_DEFINED",
          "automatable": "NOT_DEFINED",
          "providerUrgency": "NOT_DEFINED",
          "recovery": "NOT_DEFINED",
          "valueDensity": "NOT_DEFINED",
          "vulnerabilityResponseEffort": "NOT_DEFINED"
        }
      }
    ]
  },
  "weaknesses": [
    {
      "source": "disclosure@vulncheck.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-94"
        },
        {
          "lang": "en",
          "value": "CWE-276"
        },
        {
          "lang": "en",
          "value": "CWE-668"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://developer.hashicorp.com/vagrant",
      "source": "disclosure@vulncheck.com"
    },
    {
      "url": "https://developer.hashicorp.com/vagrant/docs/synced-folders/basic_usage",
      "source": "disclosure@vulncheck.com"
    },
    {
      "url": "https://developer.hashicorp.com/vagrant/docs/vagrantfile",
      "source": "disclosure@vulncheck.com"
    },
    {
      "url": "https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/multi/local/vagrant_synced_folder_vagrantfile_breakout.rb",
      "source": "disclosure@vulncheck.com"
    },
    {
      "url": "https://vulncheck.com/advisories/hashicorp-vagrant-synced-folder-vagrantfile-breakout",
      "source": "disclosure@vulncheck.com"
    },
    {
      "url": "https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/multi/local/vagrant_synced_folder_vagrantfile_breakout.rb",
      "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0"
    }
  ]
}