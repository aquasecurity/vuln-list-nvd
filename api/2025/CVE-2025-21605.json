{
  "id": "CVE-2025-21605",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2025-04-23T16:15:34.770",
  "lastModified": "2025-04-29T13:52:47.470",
  "vulnStatus": "Awaiting Analysis",
  "descriptions": [
    {
      "lang": "en",
      "value": "Redis is an open source, in-memory database that persists on disk. In versions starting at 2.6 and prior to 7.4.3, An unauthenticated client can cause unlimited growth of output buffers, until the server runs out of memory or is killed. By default, the Redis configuration does not limit the output buffer of normal clients (see client-output-buffer-limit). Therefore, the output buffer can grow unlimitedly over time. As a result, the service is exhausted and the memory is unavailable. When password authentication is enabled on the Redis server, but no password is provided, the client can still cause the output buffer to grow from \"NOAUTH\" responses until the system will run out of memory. This issue has been patched in version 7.4.3. An additional workaround to mitigate this problem without patching the redis-server executable is to block access to prevent unauthenticated users from connecting to Redis. This can be done in different ways. Either using network access control tools like firewalls, iptables, security groups, etc, or enabling TLS and requiring users to authenticate using client side certificates."
    },
    {
      "lang": "es",
      "value": "Redis es una base de datos en memoria de código abierto que persiste en el disco. En versiones a partir de la 2.6 y anteriores a la 7.4.3, un cliente no autenticado puede provocar un crecimiento ilimitado de los búferes de salida, hasta que el servidor se quede sin memoria o se cierre. De forma predeterminada, la configuración de Redis no limita el búfer de salida de los clientes normales (véase client-output-buffer-limit). Por lo tanto, el búfer de salida puede crecer ilimitadamente con el tiempo. Como resultado, el servicio se agota y la memoria no está disponible. Cuando la autenticación con contraseña está habilitada en el servidor Redis, pero no se proporciona ninguna contraseña, el cliente puede provocar que el búfer de salida crezca a partir de respuestas \"NOAUTH\" hasta que el sistema se quede sin memoria. Este problema se ha corregido en la versión 7.4.3. Otro workaround para mitigar este problema sin parchear el ejecutable redis-server es bloquear el acceso para evitar que usuarios no autenticados se conecten a Redis. Esto se puede hacer de diferentes maneras. Ya sea utilizando herramientas de control de acceso a la red, como firewalls, iptables, grupos de seguridad, etc., o habilitando TLS y requiriendo que los usuarios se autentiquen utilizando certificados del lado del cliente."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "NONE",
          "integrityImpact": "NONE",
          "availabilityImpact": "HIGH",
          "baseScore": 7.5,
          "baseSeverity": "HIGH"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 3.6
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-770"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/redis/redis/releases/tag/7.4.3",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/redis/redis/security/advisories/GHSA-r67f-p999-2gff",
      "source": "security-advisories@github.com"
    }
  ]
}