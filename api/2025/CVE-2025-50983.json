{
  "id": "CVE-2025-50983",
  "sourceIdentifier": "cve@mitre.org",
  "published": "2025-08-27T16:15:35.847",
  "lastModified": "2025-08-29T16:24:09.860",
  "vulnStatus": "Awaiting Analysis",
  "descriptions": [
    {
      "lang": "en",
      "value": "SQL Injection vulnerability exists in the sortKey parameter of the GET /api/v1/wanted/cutoff API endpoint in readarr 0.4.15.2787. The endpoint fails to properly sanitize user-supplied input, allowing attackers to inject and execute arbitrary SQL commands against the backend SQLite database. Sqlmap confirmed exploitation via stacked queries, demonstrating that the parameter can be abused to run arbitrary SQL statements. A heavy query was executed using SQLite's RANDOMBLOB() and HEX() functions to simulate a time-based payload, indicating deep control over database interactions."
    },
    {
      "lang": "es",
      "value": "Existe una vulnerabilidad de inyección SQL en el parámetro sortKey del endpoint de la API GET /api/v1/wanted/cutoff en readarr 0.4.15.2787. El endpoint no depura correctamente la entrada proporcionada por el usuario, lo que permite a los atacantes inyectar y ejecutar comandos SQL arbitrarios en la base de datos SQLite. SQLmap confirmó la explotación mediante consultas apiladas, lo que demuestra que se puede abusar del parámetro para ejecutar sentencias SQL arbitrarias. Se ejecutó una consulta pesada utilizando las funciones RANDOMBLOB() y HEX() de SQLite para simular una payload basada en el tiempo, lo que indica un control exhaustivo sobre las interacciones con la base de datos."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:L",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "REQUIRED",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "LOW",
          "baseScore": 8.3,
          "baseSeverity": "HIGH"
        },
        "exploitabilityScore": 2.8,
        "impactScore": 5.5
      }
    ]
  },
  "weaknesses": [
    {
      "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-89"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/4rdr/proofs/blob/main/info/readarr-0.4.15.2787-sql-injection-via-sortkey-parameter.md",
      "source": "cve@mitre.org"
    }
  ]
}